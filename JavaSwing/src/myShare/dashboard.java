/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myShare;

import java.awt.List;
import java.net.PasswordAuthentication;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.util.Properties;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


/**
 *
 * @author Kavin
 */
public class dashboard extends javax.swing.JFrame {

    /**
     * Creates new form dashboard
     */
    public dashboard() {
        initComponents();
        populateSupplierComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        MS = new javax.swing.JButton();
        MI = new javax.swing.JButton();
        MEO = new javax.swing.JButton();
        AEC = new javax.swing.JButton();
        MRS = new javax.swing.JButton();
        NOT2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MCO = new javax.swing.JButton();
        NOT1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOrder = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        deleteOrder = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        orderID = new javax.swing.JTextField();
        viewOrderTable = new javax.swing.JButton();
        addOrder = new javax.swing.JButton();
        updateOrder = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSupplier = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        launchAdd2 = new javax.swing.JButton();
        launchUpdate2 = new javax.swing.JButton();
        deleteSupplier = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        orderIDsup = new javax.swing.JTextField();
        viewSupplierTable = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfMaterial = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        supplierCombo = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        tfQuantity = new javax.swing.JTextField();
        addInventory = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableInventory = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        material1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        supplierCombo1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        tfInventory = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        tfQuantity2 = new javax.swing.JTextField();
        updateBtnInventory = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        InventoryDeleteField = new javax.swing.JTextField();
        Inventorydelete = new javax.swing.JButton();
        viewInventoryTable = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableInventory1 = new javax.swing.JTable();
        viewEmployeeTable = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        EmployeeDelete = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        launchAddEmployee = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        launchemployeeUpdate = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        assignOrder = new javax.swing.JButton();
        viewEmployeeAllocate = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        assignTable = new javax.swing.JTable();
        jLabel40 = new javax.swing.JLabel();
        viewOrderAllocate = new javax.swing.JButton();
        ViewAssignedTable = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        viewTableEmail = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtToEmail = new javax.swing.JTextField();
        sendEmail = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtmsg = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel47 = new javax.swing.JLabel();
        viewTableEmail1 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        txtToEmail1 = new javax.swing.JTextField();
        sendEmail1 = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtSubject1 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtmsg1 = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(21474, 21474));

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        MS.setBackground(new java.awt.Color(255, 153, 0));
        MS.setText("Managing Suppliers");
        MS.setBorder(null);
        MS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSActionPerformed(evt);
            }
        });

        MI.setBackground(new java.awt.Color(255, 153, 0));
        MI.setText("Managing Inventory");
        MI.setBorder(null);
        MI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIActionPerformed(evt);
            }
        });

        MEO.setBackground(new java.awt.Color(255, 153, 0));
        MEO.setText("Managing Employee in the organization");
        MEO.setBorder(null);
        MEO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEOActionPerformed(evt);
            }
        });

        AEC.setBackground(new java.awt.Color(255, 153, 0));
        AEC.setText("Allocating orders to employee");
        AEC.setBorder(null);
        AEC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AECActionPerformed(evt);
            }
        });

        MRS.setBackground(new java.awt.Color(255, 153, 0));
        MRS.setText("Monthly report of sales");
        MRS.setBorder(null);
        MRS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MRSActionPerformed(evt);
            }
        });

        NOT2.setBackground(new java.awt.Color(255, 153, 0));
        NOT2.setText("Notification to Employees");
        NOT2.setBorder(null);
        NOT2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NOT2ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myShare/myShare.icons/java.png"))); // NOI18N

        MCO.setBackground(new java.awt.Color(255, 153, 0));
        MCO.setText("Managing Customer Orders");
        MCO.setBorder(null);
        MCO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCOActionPerformed(evt);
            }
        });

        NOT1.setBackground(new java.awt.Color(255, 153, 0));
        NOT1.setText("Notification to Customers");
        NOT1.setBorder(null);
        NOT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NOT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(MEO, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                        .addComponent(MI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(NOT2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NOT1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MRS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AEC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(MCO, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MS, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(MCO, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MS, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MI, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MEO, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AEC, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MRS, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NOT1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NOT2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel16.setText("NOT1 - Send notification to customers when order is ready");

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel17.setText("NOT2 - Send notification to employee when a new order is allocated");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myShare/myShare.icons/java.png"))); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 0));
        jLabel19.setText("Welcome to the admin control panel !");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(730, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel17)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel19)
                .addGap(50, 50, 50)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Instructions", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer Name", "Order Date", "Order Details", "Delivery Date", "Category", "order_id", "order_price", "customer_email"
            }
        ));
        jScrollPane1.setViewportView(jTableOrder);

        jLabel18.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel18.setText("Managing Customer Orders");

        deleteOrder.setText("Delete Order");
        deleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter Customer ID to delete");

        viewOrderTable.setText("View Table");
        viewOrderTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderTableActionPerformed(evt);
            }
        });

        addOrder.setText("Add Order");
        addOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderActionPerformed(evt);
            }
        });

        updateOrder.setText("Update Order");
        updateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteOrder))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(90, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(viewOrderTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateOrder)
                        .addGap(110, 110, 110))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewOrderTable))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addOrder)
                            .addComponent(updateOrder))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteOrder))
                .addGap(101, 101, 101))
        );

        jTabbedPane1.addTab("1", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jTableSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Supplier ID", "Supplier Name", "Address", "Email"
            }
        ));
        jScrollPane2.setViewportView(jTableSupplier);

        jLabel20.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel20.setText("Managing Suppliers");

        launchAdd2.setText("Add Supplier");
        launchAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchAdd2ActionPerformed(evt);
            }
        });

        launchUpdate2.setText("Update Supplier");
        launchUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchUpdate2ActionPerformed(evt);
            }
        });

        deleteSupplier.setText("Delete Order");
        deleteSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSupplierActionPerformed(evt);
            }
        });

        jLabel8.setText("Enter Supplier ID to delete");

        viewSupplierTable.setText("View Table");
        viewSupplierTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSupplierTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(orderIDsup, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(deleteSupplier)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(viewSupplierTable)
                                .addGap(172, 172, 172)
                                .addComponent(launchAdd2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(launchUpdate2)))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewSupplierTable, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(launchUpdate2)
                        .addComponent(launchAdd2)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(orderIDsup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteSupplier))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("2", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel21.setText("Managing Inventory");

        jPanel11.setBackground(new java.awt.Color(153, 255, 255));

        jLabel4.setText("Material");

        jLabel11.setText("Supplier ID");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Add to Inventory");

        jLabel24.setText("Quantity");

        addInventory.setText("Add");
        addInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel12))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfMaterial, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                        .addComponent(tfQuantity))
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(addInventory)))))))
                .addGap(31, 31, 31))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel12)
                .addGap(14, 14, 14)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(addInventory))
                .addGap(47, 47, 47))
        );

        jTableInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Inventory ID", "Material", "Quantity", "Supplier ID"
            }
        ));
        jScrollPane3.setViewportView(jTableInventory);
        if (jTableInventory.getColumnModel().getColumnCount() > 0) {
            jTableInventory.getColumnModel().getColumn(3).setHeaderValue("Supplier ID");
        }

        jPanel12.setBackground(new java.awt.Color(153, 255, 255));

        jLabel13.setText("Material");

        jLabel14.setText("Supplier ID");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Update Inventory");

        jLabel22.setText("ID to Update");

        jLabel25.setText("Quantity");

        updateBtnInventory.setText("Update");
        updateBtnInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnInventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel22)
                    .addComponent(jLabel25))
                .addGap(23, 23, 23)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(supplierCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateBtnInventory))
                    .addComponent(tfInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addComponent(material1)
                    .addComponent(tfQuantity2))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(material1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25)
                    .addComponent(tfQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(supplierCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtnInventory))
                .addGap(19, 19, 19))
        );

        jLabel23.setText("Enter Inventory ID to delete");

        Inventorydelete.setText("Delete");
        Inventorydelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InventorydeleteActionPerformed(evt);
            }
        });

        viewInventoryTable.setText("View Table");
        viewInventoryTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInventoryTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewInventoryTable))
                        .addGap(27, 27, 27)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(Inventorydelete))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(InventoryDeleteField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel23)))))
                .addGap(0, 85, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewInventoryTable))
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(InventoryDeleteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Inventorydelete))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("3", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel26.setText("Managing Employees");

        jTableInventory1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Employee ID", "Employee Role", "Email", "Employee Name"
            }
        ));
        jScrollPane4.setViewportView(jTableInventory1);

        viewEmployeeTable.setText("View Table");
        viewEmployeeTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEmployeeTableActionPerformed(evt);
            }
        });

        jLabel27.setText("Enter Employee ID to delete");

        EmployeeDelete.setText("Delete");
        EmployeeDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeDeleteActionPerformed(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(153, 255, 255));

        launchAddEmployee.setText("Add");
        launchAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchAddEmployeeActionPerformed(evt);
            }
        });

        jLabel28.setText("Name");

        jLabel29.setText("Email");

        jLabel30.setText("Role");

        jLabel34.setText("Add Employee");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jTextField4)
                            .addComponent(jTextField3)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(launchAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel34)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addComponent(launchAddEmployee)
                .addGap(14, 14, 14))
        );

        jPanel14.setBackground(new java.awt.Color(153, 255, 255));

        launchemployeeUpdate.setText("Update");
        launchemployeeUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchemployeeUpdateActionPerformed(evt);
            }
        });

        jLabel31.setText("ID to Update");

        jLabel32.setText("Email");

        jLabel33.setText("Role");

        jLabel35.setText("Update Employee");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33))
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(jTextField8)
                    .addComponent(jTextField6))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(launchemployeeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addGap(63, 63, 63))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addGap(18, 18, 18)
                .addComponent(launchemployeeUpdate)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel27))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(EmployeeDelete))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(viewEmployeeTable)))))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(viewEmployeeTable)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EmployeeDelete))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(1696, 1696, 1696))
        );

        jTabbedPane1.addTab("4", jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel7.setPreferredSize(new java.awt.Dimension(805, 1000));

        jLabel36.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel36.setText("Allocating Orders to Employees");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee ID", "Role"
            }
        ));
        jScrollPane6.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Oder Detail", "Delivery Date"
            }
        ));
        jScrollPane7.setViewportView(jTable2);

        jLabel7.setText("Employee");

        jLabel37.setText("Orders");

        jLabel39.setText("Assign Employee to Order");

        jLabel38.setText("Enter Employee ID");

        jLabel41.setText("Enter Order ID");

        assignOrder.setText("Assign");
        assignOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel39))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel41))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignOrder)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField9)
                                .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel39)
                .addGap(40, 40, 40)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(assignOrder)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        viewEmployeeAllocate.setText("View Table");
        viewEmployeeAllocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEmployeeAllocateActionPerformed(evt);
            }
        });

        assignTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Order ID", "Employee ID"
            }
        ));
        jScrollPane5.setViewportView(assignTable);

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel40.setText("Assigned Orders");

        viewOrderAllocate.setText("View Table");
        viewOrderAllocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderAllocateActionPerformed(evt);
            }
        });

        ViewAssignedTable.setText("View Table");
        ViewAssignedTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAssignedTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel40)
                                        .addGap(18, 18, 18)
                                        .addComponent(ViewAssignedTable))
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(viewEmployeeAllocate)
                        .addGap(126, 126, 126)
                        .addComponent(jLabel37)
                        .addGap(18, 18, 18)
                        .addComponent(viewOrderAllocate)
                        .addGap(366, 366, 366))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(viewEmployeeAllocate))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(viewOrderAllocate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(ViewAssignedTable))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addGap(4906, 4906, 4906))
        );

        jTabbedPane1.addTab("5", jPanel7);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel42.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel42.setText("Sending Notification to Customers");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel43.setText("Customers Details");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "order_id", "Customer Name", "Customer Email"
            }
        ));
        jScrollPane8.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setHeaderValue("");
            jTable3.getColumnModel().getColumn(1).setHeaderValue("Employee Name");
        }

        viewTableEmail.setText("View Table");
        viewTableEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTableEmailActionPerformed(evt);
            }
        });

        jLabel9.setText("To");

        sendEmail.setText("Send");
        sendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmailActionPerformed(evt);
            }
        });

        jLabel44.setText("Send Email to Customer");

        jLabel45.setText("Subject");

        txtSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubjectActionPerformed(evt);
            }
        });

        jLabel46.setText("Message");

        txtmsg.setColumns(20);
        txtmsg.setRows(5);
        jScrollPane9.setViewportView(txtmsg);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel44))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addComponent(jLabel45)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtToEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendEmail)
                            .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel44)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtToEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendEmail)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewTableEmail))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(viewTableEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("6", jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel48.setFont(new java.awt.Font("Sitka Display", 1, 24)); // NOI18N
        jLabel48.setText("Sending Notification to Employee");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee Email", "Employee ID"
            }
        ));
        jScrollPane10.setViewportView(jTable4);

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel47.setText("Employee Details");

        viewTableEmail1.setText("View Table");
        viewTableEmail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTableEmail1ActionPerformed(evt);
            }
        });

        jLabel49.setText("To");

        sendEmail1.setText("Send");
        sendEmail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmail1ActionPerformed(evt);
            }
        });

        jLabel50.setText("Send Email to Employee");

        jLabel51.setText("Subject");

        txtSubject1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubject1ActionPerformed(evt);
            }
        });

        jLabel52.setText("Message");

        txtmsg1.setColumns(20);
        txtmsg1.setRows(5);
        jScrollPane11.setViewportView(txtmsg1);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel50))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel52)
                            .addComponent(jLabel51)
                            .addComponent(jLabel49))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtToEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendEmail1)
                            .addComponent(txtSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(txtToEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(txtSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendEmail1)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(198, 198, 198))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(viewTableEmail1)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel10))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(viewTableEmail1))))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("7", jPanel9);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 805, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("8", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 805, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MCOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCOActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_MCOActionPerformed

    private void MEOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEOActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_MEOActionPerformed

    private void MSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_MSActionPerformed

    private void MIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_MIActionPerformed

    private void AECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AECActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_AECActionPerformed

    private void MRSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MRSActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(8);
    }//GEN-LAST:event_MRSActionPerformed

    private void NOT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NOT1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_NOT1ActionPerformed

    //Siyam - Manage customer Orders
    private void viewOrderTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderTableActionPerformed
        // TODO add your handling code here:
        viewOrderTable();

    }//GEN-LAST:event_viewOrderTableActionPerformed
    
    private void viewOrderTable() {
        // Database connection details
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        try {
            // Establish database connection
            Connection connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);
            Statement statement = connection.createStatement();

            // Execute the SQL query to retrieve data
            String selectQuery = "SELECT cus_name, order_date, order_details,order_cost, delivery_date, category,order_id,cus_email FROM orders";
            ResultSet resultSet = statement.executeQuery(selectQuery);

            // Create a DefaultTableModel to hold the data
            DefaultTableModel model = (DefaultTableModel) jTableOrder.getModel();
            model.setRowCount(0); // Clear the existing table data

            // Populate the JTable with the retrieved data
            while (resultSet.next()) {
                String cus_name = resultSet.getString("cus_name");
                Date order_date = resultSet.getDate("order_date");
                String order_details = resultSet.getString("order_details");
                int order_cost = resultSet.getInt("order_cost");
                Date delivery_date = resultSet.getDate("delivery_date");
                String category = resultSet.getString("category");
                int order_id = resultSet.getInt("order_id");
                String cus_email = resultSet.getString("cus_email");
       

                // Add the data as a new row to the table
                model.addRow(new Object[]{cus_name, order_date, order_details,delivery_date, category, order_id,order_cost,cus_email});
            }
            
            

            // Close the resources
            resultSet.close();
            statement.close();
            connection.close();

        } catch (SQLException ex) {
            // Handle any potential errors related to the database connection or query
            ex.printStackTrace();
        }
    }
    
    
    
    
    private void deleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderActionPerformed
        // TODO add your handling code here:
         String orderIdString = orderID.getText();

        // Check if the Order ID is not empty
        if (orderIdString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the Order ID to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Convert the Order ID to an integer (assuming the Order ID is an integer in the database)
        int orderId;
        try {
            orderId = Integer.parseInt(orderIdString);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Order ID format. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Database connection parameters
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query to delete the order by Order ID
            String sqlQuery = "DELETE FROM orders WHERE order_id = ?";

            // Prepare the statement with the SQL query
            preparedStatement = connection.prepareStatement(sqlQuery);

            // Set the parameter in the prepared statement
            preparedStatement.setInt(1, orderId);

            // Execute the SQL query to delete the order
            int rowsAffected = preparedStatement.executeUpdate();

            // Check if the delete was successful
            if (rowsAffected > 0) {
                // Order deleted successfully
                JOptionPane.showMessageDialog(this, "Order with ID " + orderId + " has been deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Failed to delete order (Order ID not found)
                JOptionPane.showMessageDialog(this, "Order with ID " + orderId + " not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
        } finally {
            // Close the statement and connection
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
        
    }//GEN-LAST:event_deleteOrderActionPerformed

    //Shamini - Managing Suppliers
    
    private void launchAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchAdd2ActionPerformed
        // TODO add your handling code here:
        addSupplier LoginFrame = new addSupplier();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_launchAdd2ActionPerformed

    private void launchUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchUpdate2ActionPerformed
        // TODO add your handling code here:
        updateSupplier LoginFrame = new updateSupplier();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_launchUpdate2ActionPerformed

    private void deleteSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSupplierActionPerformed
        // TODO add your handling code here:
        String orderIdString = orderIDsup.getText();

        // Check if the Order ID is not empty
        if (orderIdString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the Supplier ID to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Convert the Order ID to an integer (assuming the Order ID is an integer in the database)
        int orderId;
        try {
            orderId = Integer.parseInt(orderIdString);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Supplier ID format. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Database connection parameters
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query to delete the order by Order ID
            String sqlQuery = "DELETE FROM supplier WHERE supplierID = ?";

            // Prepare the statement with the SQL query
            preparedStatement = connection.prepareStatement(sqlQuery);

            // Set the parameter in the prepared statement
            preparedStatement.setInt(1, orderId);

            // Execute the SQL query to delete the order
            int rowsAffected = preparedStatement.executeUpdate();

            // Check if the delete was successful
            if (rowsAffected > 0) {
                // Order deleted successfully
                JOptionPane.showMessageDialog(this, "Supplier with ID " + orderId + " has been deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Failed to delete order (Order ID not found)
                JOptionPane.showMessageDialog(this, "Supplier with ID " + orderId + " not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
        } finally {
            // Close the statement and connection
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_deleteSupplierActionPerformed

    private void viewSupplierTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSupplierTableActionPerformed
        // TODO add your handling code here:
        viewSupplierTable();
    }//GEN-LAST:event_viewSupplierTableActionPerformed

     private void viewSupplierTable() {
        // Database connection details
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        try {
            // Establish database connection
            Connection connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);
            Statement statement = connection.createStatement();

            // Execute the SQL query to retrieve data
            String selectQuery = "SELECT supplierID, sup_name, sup_email, sup_address FROM supplier";
            ResultSet resultSet = statement.executeQuery(selectQuery);

            // Create a DefaultTableModel to hold the data
            DefaultTableModel model = (DefaultTableModel) jTableSupplier.getModel();
            model.setRowCount(0); // Clear the existing table data

            // Populate the JTable with the retrieved data
            while (resultSet.next()) {
                int supplierID = resultSet.getInt("supplierID");
                String supplierName = resultSet.getString("sup_name");
                String email = resultSet.getString("sup_email");
                String address = resultSet.getString("sup_address");

                // Add the data as a new row to the table
                model.addRow(new Object[]{supplierID, supplierName, address, email});
            }

            // Close the resources
            resultSet.close();
            statement.close();
            connection.close();

        } catch (SQLException ex) {
            // Handle any potential errors related to the database connection or query
            ex.printStackTrace();
        }
    }
     
    //Manav - Manage Inventory
     
    private void addInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInventoryActionPerformed
        // TODO add your handling code here:
       String material = tfMaterial.getText();
        String selectedSupplierID = (String) supplierCombo.getSelectedItem(); // Get the selected item as a String
        int supplierID = Integer.parseInt(selectedSupplierID); // Convert the selected item to an int
       int quantity = Integer.parseInt(tfQuantity.getText());

    // Database connection parameters
    String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query
        String sqlQuery = "INSERT INTO inventory (material, supplierID, quantity) VALUES (?, ?, ?)";

        // Prepare the statement with the SQL query
        preparedStatement = connection.prepareStatement(sqlQuery);

        // Set the parameters in the prepared statement
        preparedStatement.setString(1, material);
        preparedStatement.setInt(2, supplierID);
        preparedStatement.setInt(3, quantity);

        // Execute the SQL query to add the data to the table
        int rowsAffected = preparedStatement.executeUpdate();

        // Check if the insert was successful
        if (rowsAffected > 0) {
            // Data added successfully
            System.out.println("Inventory item added to the database.");
            JOptionPane.showMessageDialog(this, "Inventory item added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Failed to add data
            System.out.println("Failed to add inventory item to the database.");
            JOptionPane.showMessageDialog(this, "Failed to add inventory item.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close the statement and connection
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_addInventoryActionPerformed

    private void updateBtnInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnInventoryActionPerformed
        // TODO add your handling code here:
        // Get the inventory ID from the input field
    int inventoryID = Integer.parseInt(tfInventory.getText());

    // Get the updated values from the input fields
    String updatedMaterial =material1.getText();
    
    // Get the updated supplier ID from the combo box
    String selectedSupplierID = (String) supplierCombo1.getSelectedItem();
    int updatedSupplierID = Integer.parseInt(selectedSupplierID);
    
    int updatedQuantity = Integer.parseInt(tfQuantity2.getText());

    // Database connection parameters
    String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query
        String sqlQuery = "UPDATE inventory SET material = ?, supplierID = ?, quantity = ? WHERE inventory_id = ?";

        // Prepare the statement with the SQL query
        preparedStatement = connection.prepareStatement(sqlQuery);

        // Set the parameters in the prepared statement
        preparedStatement.setString(1, updatedMaterial);
        preparedStatement.setInt(2, updatedSupplierID);
        preparedStatement.setInt(3, updatedQuantity);
        preparedStatement.setInt(4, inventoryID);

        // Execute the SQL query to update the data in the table
        int rowsAffected = preparedStatement.executeUpdate();

        // Check if the update was successful
        if (rowsAffected > 0) {
            // Data updated successfully
            System.out.println("Inventory item updated in the database.");
            JOptionPane.showMessageDialog(this, "Inventory item updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Failed to update data
            System.out.println("Failed to update inventory item in the database.");
            JOptionPane.showMessageDialog(this, "Failed to update inventory item.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close the statement and connection
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_updateBtnInventoryActionPerformed

    private void viewInventoryTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInventoryTableActionPerformed
        // TODO add your handling code here:
         String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
         String dbUser = "root";
         String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query to retrieve inventory data
        String selectQuery = "SELECT inventory_id, material, supplierID, quantity FROM inventory";
        preparedStatement = connection.prepareStatement(selectQuery);

        // Execute the SQL query to retrieve data
        resultSet = preparedStatement.executeQuery();

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = (DefaultTableModel) jTableInventory.getModel();
        model.setRowCount(0); // Clear the existing table data

        // Populate the JTable with the retrieved data
        while (resultSet.next()) {
            int inventoryID = resultSet.getInt("inventory_id");
            String material = resultSet.getString("material");
            int supplierID = resultSet.getInt("supplierID");
            int quantity = resultSet.getInt("quantity");

            // Add the data as a new row to the table
            model.addRow(new Object[]{inventoryID, material, quantity, supplierID});
        }

        // Close the resources
        resultSet.close();
        preparedStatement.close();

    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close the statement and connection
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_viewInventoryTableActionPerformed

    private void InventorydeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InventorydeleteActionPerformed
        // TODO add your handling code here:
         int inventoryID = Integer.parseInt(InventoryDeleteField.getText());

    // Database connection parameters
    String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query to delete the inventory record
        String sqlQuery = "DELETE FROM inventory WHERE inventory_id = ?";

        // Prepare the statement with the SQL query
        preparedStatement = connection.prepareStatement(sqlQuery);

        // Set the inventory ID parameter in the prepared statement
        preparedStatement.setInt(1, inventoryID);

        // Execute the SQL query to delete the record
        int rowsAffected = preparedStatement.executeUpdate();

        // Check if the delete was successful
        if (rowsAffected > 0) {
            // Record deleted successfully
            System.out.println("Inventory item deleted from the database.");
            JOptionPane.showMessageDialog(this, "Inventory item deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Failed to delete record (record with given inventory ID not found)
            System.out.println("No inventory item found with the given inventory ID.");
            JOptionPane.showMessageDialog(this, "No inventory item found with the given inventory ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close the statement and connection
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_InventorydeleteActionPerformed

    private void populateSupplierComboBoxes() {
        // Database connection parameters
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query to retrieve supplierIDs from the supplier table
            String sqlQuery = "SELECT supplierID FROM supplier";

            // Prepare the statement with the SQL query
            preparedStatement = connection.prepareStatement(sqlQuery);

            // Execute the SQL query to retrieve the data
            resultSet = preparedStatement.executeQuery();

            // Create DefaultComboBoxModel to store the supplierIDs
            DefaultComboBoxModel<String> comboModel = new DefaultComboBoxModel<>();

            // Populate the comboModel with the supplierIDs from the resultSet
            while (resultSet.next()) {
                String supplierID = resultSet.getString("supplierID");
                comboModel.addElement(supplierID);
            }

            // Set the supplierCombo and supplierCombo1 models to the populated comboModel
            supplierCombo.setModel(comboModel);
            supplierCombo1.setModel(comboModel);

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the result set, statement, and connection
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private void NOT2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NOT2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_NOT2ActionPerformed

    //Thujithra - Managing Employeee
    
    private void launchemployeeUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchemployeeUpdateActionPerformed
        // TODO add your handling code here:
        int employeeID = Integer.parseInt(jTextField6.getText());

        String empEmail = jTextField7.getText();
        String emprole = jTextField8.getText();

        // Database connection parameters
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query
            String sqlQuery = "UPDATE employee SET email = ?, role = ? WHERE employee_id = ?";

            // Prepare the statement with the SQL query
            preparedStatement = connection.prepareStatement(sqlQuery);

            // Set the parameters in the prepared statement
            preparedStatement.setString(1, empEmail);
            preparedStatement.setString(2, emprole);
            preparedStatement.setInt(3, employeeID);

            // Execute the SQL query to update the data in the table
            int rowsAffected = preparedStatement.executeUpdate();

            // Check if the update was successful
            if (rowsAffected > 0) {
                // Data updated successfully
                System.out.println("Employee details updated in the database.");
                JOptionPane.showMessageDialog(this, "Employee details updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Failed to update data (employee with given ID not found)
                System.out.println("No employee found with the given ID.");
                JOptionPane.showMessageDialog(this, "No employee found with the given ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the statement and connection
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_launchemployeeUpdateActionPerformed

    private void launchAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchAddEmployeeActionPerformed
        // TODO add your handling code here:
        String empname = jTextField3.getText();
        String empEmail = jTextField4.getText();
        String emprole = jTextField5.getText();

        // Database connection parameters
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query
            String sqlQuery = "INSERT INTO employee (name,email,role) VALUES (?, ?, ?)";

            // Prepare the statement with the SQL query
            preparedStatement = connection.prepareStatement(sqlQuery);

            // Set the parameters in the prepared statement
            preparedStatement.setString(1, empname);
            preparedStatement.setString(2, empEmail);
            preparedStatement.setString(3, emprole);

            // Execute the SQL query to add the data to the table
            int rowsAffected = preparedStatement.executeUpdate();

            // Check if the insert was successful
            if (rowsAffected > 0) {
                // Data added successfully
                System.out.println("Employee details added to the database.");
                JOptionPane.showMessageDialog(this, "Employee details added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Failed to add data
                System.out.println("Failed to add Employee details to the database.");
                JOptionPane.showMessageDialog(this, "Failed to add Employee details.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
        } finally {
            // Close the statement and connection
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_launchAddEmployeeActionPerformed

    private void EmployeeDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeDeleteActionPerformed
        // TODO add your handling code here:
        // Get the employee ID from the user input (assuming you have a text field called tfEmployeeID)
        int employeeID = Integer.parseInt(jTextField2.getText());

        // Database connection parameters
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query
            String sqlQuery = "DELETE FROM employee WHERE employee_id = ?";

            // Prepare the statement with the SQL query
            preparedStatement = connection.prepareStatement(sqlQuery);

            // Set the parameter in the prepared statement
            preparedStatement.setInt(1, employeeID);

            // Execute the SQL query to delete the employee with the specified ID
            int rowsAffected = preparedStatement.executeUpdate();

            // Check if the delete was successful
            if (rowsAffected > 0) {
                // Employee deleted successfully
                System.out.println("Employee with ID " + employeeID + " has been deleted.");
                JOptionPane.showMessageDialog(this, "Employee with ID " + employeeID + " has been deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Failed to delete employee (employee with given ID not found)
                System.out.println("No employee found with the given ID.");
                JOptionPane.showMessageDialog(this, "No employee found with the given ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the statement and connection
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_EmployeeDeleteActionPerformed

    private void viewEmployeeTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEmployeeTableActionPerformed
        // TODO add your handling code here:
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        try {
            // Establish the database connection
            connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

            // Create the SQL query to retrieve inventory data
            String selectQuery = "SELECT employee_id, name, email, role FROM employee";
            preparedStatement = connection.prepareStatement(selectQuery);

            // Execute the SQL query to retrieve data
            resultSet = preparedStatement.executeQuery();

            // Create a DefaultTableModel to hold the data
            DefaultTableModel model = (DefaultTableModel) jTableInventory1.getModel();
            model.setRowCount(0); // Clear the existing table data

            // Populate the JTable with the retrieved data
            while (resultSet.next()) {
                int employeeID = resultSet.getInt("employee_id");
                String name = resultSet.getString("name");
                String email = resultSet.getString("email");
                String role = resultSet.getString("role");

                // Add the data as a new row to the table
                model.addRow(new Object[]{employeeID, role, email, name});
            }

            // Close the resources
            resultSet.close();
            preparedStatement.close();

        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the statement and connection
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_viewEmployeeTableActionPerformed

    //Nitishe - Allocating Orders to Employee
    
    private void viewEmployeeAllocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEmployeeAllocateActionPerformed
        // TODO add your handling code here:
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
        String dbUser = "root";
        String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query
        String sqlQuery = "SELECT employee_id, role FROM employee";

        // Prepare the statement with the SQL query
        preparedStatement = connection.prepareStatement(sqlQuery);

        // Execute the SQL query to retrieve data
        resultSet = preparedStatement.executeQuery();

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear the existing table data

        // Populate the JTable with the retrieved data
        while (resultSet.next()) {
            int employeeID = resultSet.getInt("employee_id");
            String role = resultSet.getString("role");

            // Add the data as a new row to the table
            model.addRow(new Object[]{employeeID, role});
        }

    } catch (SQLException e) {
        // Handle any potential errors related to the database connection or query
        e.printStackTrace();
    } finally {
        // Close the resources
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
        
    }//GEN-LAST:event_viewEmployeeAllocateActionPerformed

    private void viewOrderAllocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderAllocateActionPerformed
        // TODO add your handling code here:
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query
        String sqlQuery = "SELECT order_id, order_details, delivery_date FROM orders";

        // Prepare the statement with the SQL query
        preparedStatement = connection.prepareStatement(sqlQuery);

        // Execute the SQL query to retrieve data
        resultSet = preparedStatement.executeQuery();

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Clear the existing table data

        // Populate the JTable with the retrieved data
        while (resultSet.next()) {
            int orderID = resultSet.getInt("order_id");
            String orderDetail = resultSet.getString("order_details");
            Date deliveryDate = resultSet.getDate("delivery_date");

            // Add the data as a new row to the table
            model.addRow(new Object[]{orderID, orderDetail, deliveryDate});
        }

    } catch (SQLException e) {
        // Handle any potential errors related to the database connection or query
        e.printStackTrace();
    } finally {
        // Close the resources
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_viewOrderAllocateActionPerformed

    
    private void assignOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignOrderActionPerformed
        // TODO add your handling code here:
        int employeeID = Integer.parseInt(jTextField9.getText());
        int orderID = Integer.parseInt(jTextField10.getText());

    // Database connection parameters
    String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);

        // Create the SQL query
        String sqlQuery = "INSERT INTO employee_order (EmployeeID, OrderID) VALUES (?, ?)";

        // Prepare the statement with the SQL query
        preparedStatement = connection.prepareStatement(sqlQuery);

        // Set the parameters in the prepared statement
        preparedStatement.setInt(1, employeeID);
        preparedStatement.setInt(2, orderID);

        // Execute the SQL query to assign the order to the employee
        int rowsAffected = preparedStatement.executeUpdate();

        // Check if the insert was successful
        if (rowsAffected > 0) {
            // Data added successfully
            System.out.println("Order assigned to employee successfully.");
            JOptionPane.showMessageDialog(this, "Order assigned to employee successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Failed to assign order
            System.out.println("Failed to assign order to employee.");
            JOptionPane.showMessageDialog(this, "Failed to assign order to employee.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close the statement and connection
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_assignOrderActionPerformed

    private void ViewAssignedTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAssignedTableActionPerformed
        // TODO add your handling code here:
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);
        statement = connection.createStatement();

        // Execute the SQL query to retrieve data from employee_order table
        String selectQuery = "SELECT * FROM employee_order";
        resultSet = statement.executeQuery(selectQuery);

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = (DefaultTableModel) assignTable.getModel();
        model.setRowCount(0); // Clear the existing table data

        // Populate the JTable with the retrieved data
        while (resultSet.next()) {
            int employeeID = resultSet.getInt("EmployeeID");
            int orderID = resultSet.getInt("OrderID");

            // Add the data as a new row to the table
            model.addRow(new Object[]{orderID, employeeID});
        }

    } catch (SQLException e) {
        // Handle any potential errors related to the database connection or query
        e.printStackTrace();
    } finally {
        // Close the resources
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (statement != null) {
                statement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
        
    }//GEN-LAST:event_ViewAssignedTableActionPerformed

    //Siyam _ Launch
    private void addOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderActionPerformed
        // TODO add your handling code here:
        addOrder LoginFrame = new addOrder();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);   
    }//GEN-LAST:event_addOrderActionPerformed

    private void updateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderActionPerformed
        // TODO add your handling code here:
        updateOrder LoginFrame = new updateOrder();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_updateOrderActionPerformed

    
    
    private void viewTableEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTableEmailActionPerformed
        // TODO add your handling code here:
        String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);
        statement = connection.createStatement();

        // Execute the SQL query to retrieve data from the order table
        String selectQuery = "SELECT order_id, cus_name, cus_email FROM orders";
        resultSet = statement.executeQuery(selectQuery);

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0); // Clear the existing table data

        // Populate the JTable with the retrieved data
        while (resultSet.next()) {
            int orderID = resultSet.getInt("order_id");
            String customerName = resultSet.getString("cus_name");
            String customerEmail = resultSet.getString("cus_email");

            // Add the data as a new row to the table
            model.addRow(new Object[]{orderID, customerName, customerEmail});
        }

    } catch (SQLException e) {
        // Handle any potential errors related to the database connection or query
        e.printStackTrace();
    } finally {
        // Close the resources
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (statement != null) {
                statement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_viewTableEmailActionPerformed

    private void sendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmailActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_sendEmailActionPerformed

    private void txtSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubjectActionPerformed

    private void viewTableEmail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTableEmail1ActionPerformed
        // TODO add your handling code here:
        // Database connection parameters
    String dbURL = "jdbc:mysql://localhost/MyStore?serverTimezone=UTC";
    String dbUser = "root";
    String dbPassword = "";

    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(dbURL, dbUser, dbPassword);
        statement = connection.createStatement();

        // Execute the SQL query to retrieve data from the order table
        String selectQuery = "SELECT employee_id,email FROM employee";
        resultSet = statement.executeQuery(selectQuery);

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0); // Clear the existing table data

        // Populate the JTable with the retrieved data
        while (resultSet.next()) {
            int employeeID = resultSet.getInt("employee_id");
            String email = resultSet.getString("email");

            // Add the data as a new row to the table
            model.addRow(new Object[]{employeeID, email});
        }

    } catch (SQLException e) {
        // Handle any potential errors related to the database connection or query
        e.printStackTrace();
    } finally {
        // Close the resources
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (statement != null) {
                statement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_viewTableEmail1ActionPerformed

    private void sendEmail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmail1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendEmail1ActionPerformed

    private void txtSubject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubject1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubject1ActionPerformed
    
   
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AEC;
    private javax.swing.JButton EmployeeDelete;
    private javax.swing.JTextField InventoryDeleteField;
    private javax.swing.JButton Inventorydelete;
    private javax.swing.JButton MCO;
    private javax.swing.JButton MEO;
    private javax.swing.JButton MI;
    private javax.swing.JButton MRS;
    private javax.swing.JButton MS;
    private javax.swing.JButton NOT1;
    private javax.swing.JButton NOT2;
    private javax.swing.JButton ViewAssignedTable;
    private javax.swing.JButton addInventory;
    private javax.swing.JButton addOrder;
    private javax.swing.JButton assignOrder;
    private javax.swing.JTable assignTable;
    private javax.swing.JButton deleteOrder;
    private javax.swing.JButton deleteSupplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTableInventory;
    private javax.swing.JTable jTableInventory1;
    private javax.swing.JTable jTableOrder;
    private javax.swing.JTable jTableSupplier;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton launchAdd2;
    private javax.swing.JButton launchAddEmployee;
    private javax.swing.JButton launchUpdate2;
    private javax.swing.JButton launchemployeeUpdate;
    private javax.swing.JTextField material1;
    private javax.swing.JTextField orderID;
    private javax.swing.JTextField orderIDsup;
    private javax.swing.JButton sendEmail;
    private javax.swing.JButton sendEmail1;
    private javax.swing.JComboBox<String> supplierCombo;
    private javax.swing.JComboBox<String> supplierCombo1;
    private javax.swing.JTextField tfInventory;
    private javax.swing.JTextField tfMaterial;
    private javax.swing.JTextField tfQuantity;
    private javax.swing.JTextField tfQuantity2;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtSubject1;
    private javax.swing.JTextField txtToEmail;
    private javax.swing.JTextField txtToEmail1;
    private javax.swing.JTextArea txtmsg;
    private javax.swing.JTextArea txtmsg1;
    private javax.swing.JButton updateBtnInventory;
    private javax.swing.JButton updateOrder;
    private javax.swing.JButton viewEmployeeAllocate;
    private javax.swing.JButton viewEmployeeTable;
    private javax.swing.JButton viewInventoryTable;
    private javax.swing.JButton viewOrderAllocate;
    private javax.swing.JButton viewOrderTable;
    private javax.swing.JButton viewSupplierTable;
    private javax.swing.JButton viewTableEmail;
    private javax.swing.JButton viewTableEmail1;
    // End of variables declaration//GEN-END:variables
}
